# -*- coding: utf-8 -*-
"""sampleBankLoan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j8qSmD8qpmBC1G_2ySXl0oCoONK5r7gI
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb

from google.colab import files
uploaded = files.upload()

df = pd.read_excel('/content/samplebankloandata.xlsx')
df

df.head(5)

df.tail(5)

df.dtypes

"""the data type of the datetime column is a **datetime64[ns]** object. The [ns] means the nano second-based time format that specifies the precision of the DateTime object."""

df.describe()

"""describe()-Check basic statistics of numerical columns."""

df.info()

"""info() helps to understand the data type and information about data, including the number of records in each column, data having null or not null, Data type, the memory usage of the dataset"""

df.nunique()

"""nunique() based on several unique values in each column - check for duplication"""

df.isnull().sum()

"""data.isnull().sum() is used to get the number of missing records in each column, To identify null values in the data."""

df.hist(figsize=(10,10))
plt.show()

"""Univariate Analysis:
Plotting histograms for numerical variables.
"""

fig, axes = plt.subplots(nrows=5, ncols=6, figsize=(20, 20))

# Flatten the axes for easier iteration
axes = axes.flatten()

# Loop through each column and plot histogram
for i, col in enumerate(df.columns):
    df[col].hist(ax=axes[i], bins=20, alpha=0.7, color='skyblue', edgecolor='black', grid=False)
    axes[i].set_title(col)
    axes[i].set_xlabel('')
    axes[i].set_ylabel('')

# Remove empty subplots
for j in range(len(df.columns), len(axes)):
    fig.delaxes(axes[j])

# Adjust layout
plt.tight_layout()
plt.show()

data_types = df.dtypes

# Filter columns with object or categorical data types
categorical_vars = data_types[data_types == 'object'].index.tolist() + \
                   data_types[data_types == 'category'].index.tolist()

print("Categorical variables:", categorical_vars)

# Plot count plots for each categorical variable
for var in categorical_vars:
    plt.figure(figsize=(4, 3))
    sb.countplot(x=var, data=df)
    plt.title(f'Count Plot of {var}')
    plt.xlabel(var)
    plt.ylabel('Count')
    plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
    plt.show()

"""Bivariate Analysis:

Explore relationships between variables using scatter plots or pair plots.
"""

import seaborn as sb
import pandas as pd
df = pd.read_excel('/content/samplebankloandata.xlsx')
sb.pairplot(df)
plt.show()

num = df.select_dtypes(include='float')
corr = num.corr()

sb.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

import plotly.express as px
fig = px.line_3d(df, x='loan_amount', y='interest_rate', z='grade',
                  color='loan_condition')
fig.update_layout(scene = dict(
                    xaxis = dict(title  = 'Loan Amount'),
                    yaxis = dict(title  = 'Interest Rate'),
                    zaxis = dict(title  = 'Grade')))
fig.show()

"""check for internal factors ,external factors
refer chart suggestion,inference,insights  
"""